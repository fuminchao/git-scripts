#!/bin/bash

type parallel >> /dev/null
if [ "$?" != "0" ]; then
    echo "parallel ?"
    exit 1;
fi

if [ "$1" = "--" ]; then
    shift
elif [ ! -z "$1" ]; then
    set -- "git" "$@"
fi

export CMD_ARGS=$*

# GITALL_RECURSIVE_DEPTH
# GITALL_CONCURRENT
# GITALL_NO_COLOR
# GITALL_TRIM_NO_OUTPUT

[ -z "$GITALL_CONCURRENT" ] && GITALL_CONCURRENT=20
[ -z "$GITALL_RECURSIVE_DEPTH" ] && GITALL_RECURSIVE_DEPTH=10
[ ! -t 1 ] && GITALL_NO_COLOR=Y

if [ ! "$GITALL_NO_COLOR" = "Y" ]; then
    export COLOR_LIGHT_RED='\e[1;31m'
    export COLOR_LIGHT_GREEN='\e[1;32m'
    export COLOR_BLUE='\e[0;34m'
    export COLOR_LIGHT_BLUE='\e[1;34m'
    export COLOR_YELLOW='\e[1;33m'
    export COLOR_LIGHT_PURPLE='\e[1;35m'
    export COLOR_NC='\e[0m'
fi

function PrintExec() {
    IDX=$(echo "$1"|cut -d\  -f1)
    DIR=$(echo "$1"|cut -d\  -f2)

    REPO_BASE=$(pwd)
    cd "$DIR" || exit
    cpwd=$(pwd)
    cpwd=${cpwd:${#REPO_BASE}+1}

    [ "$cpwd" = "" ] && cpwd='.'

    CMD_OUTPUT=`$CMD_ARGS`

    [ -z "$CMD_OUTPUT" -a "$GITALL_TRIM_NO_OUTPUT" = "y" ] && exit

    REPO_CURRENT_REMOTE=$(git for-each-ref --format='%(upstream:short)' $(git symbolic-ref -q HEAD) | cut -d'/' -f1)

    printf \
      "$COLOR_LIGHT_PURPLE%s$COLOR_NC $COLOR_LIGHT_BLUE%s$COLOR_NC %s $COLOR_LIGHT_BLUE%s$COLOR_NC $COLOR_YELLOW%s$COLOR_NC" \
      "$IDX" \
      "${cpwd}" "<=>" \
      "$(git remote --verbose | grep -E "^${REPO_CURRENT_REMOTE}" | grep fetch | cut -d ' ' -f1 | cut -f2)" \
      "$(git symbolic-ref --short HEAD)"
    echo

    [ ! -z "$CMD_OUTPUT" ] && echo -e "$CMD_OUTPUT"
}
export -f PrintExec

REPO_DIR=()
while read -r
do
    #echo $REPLY
    REPO_DIR+=("$(dirname $REPLY)")
done << EOF
$(find . -maxdepth $GITALL_RECURSIVE_DEPTH \( -type d -or -type l \) -name ".git" | sort -u)
EOF

function loopGit() {
    cnt=${#REPO_DIR[@]}
    for i in $(seq ${#REPO_DIR[@]})
    do
        xi="0000000000$i"
        li=${#cnt}
        xi=${xi:n-li}
        echo -en "$xi/${cnt} ${REPO_DIR[i - 1]}\0"
    done
}

loopGit | parallel -0 --no-notice -j${GITALL_CONCURRENT} --keep-order "PrintExec {};"
