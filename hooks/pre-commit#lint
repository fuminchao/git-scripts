#!/bin/sh
#
# Author: fuminchao - <fuminchao@outlook.com>
#

txtred='\e[0;31m' # Red
txtgrn='\e[0;32m' # Green
txtylw='\e[0;33m' # Yellow
txtrst='\e[0m'    # Text Reset

CUR_DIR=`pwd`
CCK_RET=0
CCK_MSG=""
CCK_PASS=()
CCK_FAIL=()

ECHO_CMD=printf # echo program colorful no newline!!

#
# Customize Your Checker
# $1 - filename with its path related to repository root
# stdin - contents in stage
#
js_checker()
{
    xfilename=`basename $1`
    tmpname=00000$RANDOM
    tmpname=`dirname $1`/$xfilename.$(date +%Y%m%d%H%M%S).${tmpname: -5}.js
    cat > $tmpname  #dump staged content into temporary file

    jshint_output=`jshint $tmpname`
    jshint_ret=$?

    rm -rf $tmpname
    echo "$jshint_output" | sed -e "s:$tmpname:$filename:g"

    return $jshint_ret
}

ts_checker()
{
  xfilename=`basename $1`
  tmpname=00000$RANDOM
  tmpname=`dirname $1`/$xfilename.$(date +%Y%m%d%H%M%S).${tmpname: -5}.ts
  cat > $tmpname  #dump staged content into temporary file

  tslint_output=`tslint $tmpname`
  tslint_ret=$?

  rm -rf $tmpname
  echo "$tslint_output" | sed -e "s:$tmpname:$filename:g"

  return $tslint_ret
}

txt_checker()
{
    return 0
}
# ENDOF - Customize Your Checker


launch_checker_fn()
{
$1 $2 <<EOF
`git show :$2`
EOF
}

while read -r
do
    file="$REPLY"
    case "$file" in
    A* | M*)    #check new/modified files only

        echo  #newline

        filename=${file:3};
        ext=`echo ${filename##*\.} | tr '[:upper:]' '[:lower:]'`;  #extension lowercase

        checker_fn=${ext}_checker;

        if [ "`type -t $checker_fn`" == "function" ]; then
            $ECHO_CMD "${txtylw}$filename${txtrst} checking...\n"
            launch_checker_fn $checker_fn $filename

            if [ $? -ne 0 ]; then
                CCK_RET=201;
                CCK_FAIL+=("$filename")
            else
                CCK_PASS+=("$filename")
            fi
        else
            $ECHO_CMD "Skipped ${txtylw}$filename${txtrst} | No checker for filetype .$ext\n"
        fi
    ;;
    esac
done << EOF
`git status --porcelain`
EOF

echo  #newline
if [ $CCK_RET -ne 0 ]; then
    $ECHO_CMD "Current commit was rejected by the failure of pre-commit validation.\nPlease fix them and re-stage the changes prior to next commit.\n"

    for f in ${CCK_FAIL[@]}
    do
      $ECHO_CMD "  ${txtred}F %s${txtrst}" $f
      echo  #newline
    done
    echo  #newline
    exit $CCK_RET
else
    echo "All pre-commit validations are passed.\nProceed to commit..."
    for f in $CCK_PASS
    do
      $ECHO_CMD "  ${txtgrn}P %s${txtrst}" $f
      echo  #newline
    done
    echo  #newline
fi
